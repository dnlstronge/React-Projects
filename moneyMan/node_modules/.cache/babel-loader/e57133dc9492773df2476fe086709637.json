{"ast":null,"code":"var _s = $RefreshSig$();\n//NEEDS TO:\n\n//add new docs to firestore collection\n//remove docs from firestore collection\n\nimport { useReducer, useEffect, useState } from \"react\";\nimport { projectFirestore, timestamp } from '../firebase/config';\nlet initialState = {\n  document: null,\n  isPending: false,\n  error: null,\n  success: null\n};\nconst firestoreReducer = (state, action) => {\n  switch (action.type) {\n    //add cases to update state\n    case 'IS_PENDING':\n      return {\n        isPending: true,\n        document: null,\n        success: false,\n        error: null\n      };\n    case 'ADDED_DOC':\n      return {\n        isPending: false,\n        document: action.payload,\n        success: true,\n        error: null\n      };\n    case 'DELETED_DOCUMENT':\n      return {\n        isPending: false,\n        document: null,\n        success: true,\n        error: null\n      };\n    case 'ERROR':\n      return {\n        isPending: false,\n        document: null,\n        success: false,\n        error: action.payload\n      };\n    default:\n      return state;\n  }\n};\nexport const useFirestore = collection => {\n  _s();\n  const [response, dispatch] = useReducer(firestoreReducer, initialState); // response = state\n  const [isCancelled, setIsCancelled] = useState(false); // for cleanup function on unmount\n\n  //ref: collection - to be used for both adding and deleting\n\n  const ref = projectFirestore.collection(collection);\n\n  // to dispatch if isCancelled is false: \n\n  const dispatchIfNotCancelled = action => {\n    if (!isCancelled) {\n      dispatch(action);\n    }\n  };\n\n  // add doc:\n  const addDocument = async doc => {\n    dispatch({\n      type: 'IS_PENDING'\n    }); // no data = no payload req\n    try {\n      const createdAt = timestamp.fromDate(new Date());\n      const addedDocument = await ref.add({\n        ...doc,\n        createdAt\n      });\n      dispatchIfNotCancelled({\n        type: 'ADDED_DOC',\n        payload: addedDocument\n      });\n    } catch (err) {\n      dispatchIfNotCancelled({\n        type: 'ERROR',\n        payload: err.message\n      });\n    }\n  };\n\n  // delete doc:\n\n  const deleteDocument = async id => {\n    dispatch({\n      type: \"IS_PENDING\"\n    });\n    try {\n      await ref.doc(id).delete();\n      dispatchIfNotCancelled({\n        type: 'DELETED_DOCUMENT'\n      });\n    } catch (err) {\n      dispatchIfNotCancelled({\n        type: 'ERROR',\n        payload: 'Could not delete'\n      });\n    }\n  };\n\n  // cleanup function\n\n  useEffect(() => {\n    return () => {\n      setIsCancelled(true);\n    };\n  }, []); // only runs on mount due to empty dep array\n\n  return {\n    addDocument,\n    deleteDocument,\n    response\n  };\n};\n_s(useFirestore, \"K5EHg2rso99EACtOAjB0P6F/j4E=\");","map":{"version":3,"names":["useReducer","useEffect","useState","projectFirestore","timestamp","initialState","document","isPending","error","success","firestoreReducer","state","action","type","payload","useFirestore","collection","response","dispatch","isCancelled","setIsCancelled","ref","dispatchIfNotCancelled","addDocument","doc","createdAt","fromDate","Date","addedDocument","add","err","message","deleteDocument","id","delete"],"sources":["/home/dnlstronge/ReactP/moneyMan/src/hooks/useFirestore.js"],"sourcesContent":["//NEEDS TO:\n\n//add new docs to firestore collection\n//remove docs from firestore collection\n\nimport { useReducer, useEffect, useState,  } from \"react\";\nimport { projectFirestore, timestamp } from '../firebase/config'\n\nlet initialState = {\n    document: null,\n    isPending: false,\n    error: null,\n    success: null\n\n}\n\nconst firestoreReducer = (state, action) => {\n    switch (action.type) {\n\n        //add cases to update state\n        case 'IS_PENDING': \n            return { isPending: true, document: null, success: false, error: null }\n        case 'ADDED_DOC':\n            return { isPending: false, document: action.payload, success: true, error: null }\n        \n        case 'DELETED_DOCUMENT':\n            return { isPending: false, document: null, success: true, error: null}\n        case 'ERROR':\n            return { isPending: false, document: null, success: false, error: action.payload }\n        \n        default: \n        return state\n    }\n\n}\n\nexport const useFirestore = (collection) => {\n\n    const [ response, dispatch ] = useReducer(firestoreReducer, initialState ) // response = state\n    const [ isCancelled, setIsCancelled ] = useState(false) // for cleanup function on unmount\n\n    //ref: collection - to be used for both adding and deleting\n\n    const ref = projectFirestore.collection(collection)\n\n    // to dispatch if isCancelled is false: \n\n    const dispatchIfNotCancelled = (action) => {\n        if(!isCancelled) { \n            dispatch(action)\n        }\n    }\n\n    // add doc:\n    const addDocument = async (doc) => {\n        dispatch({type: 'IS_PENDING'}) // no data = no payload req\n        try {\n            const createdAt = timestamp.fromDate(new Date())\n            const addedDocument = await ref.add({...doc, createdAt})\n            dispatchIfNotCancelled({ type: 'ADDED_DOC', payload: addedDocument })\n        }\n        catch (err) {\n            dispatchIfNotCancelled({ type: 'ERROR', payload: err.message})\n\n        }\n    }\n\n    // delete doc:\n\n    const deleteDocument = async (id) => {\n        dispatch({ type: \"IS_PENDING\"})\n\n        try {\n            await ref.doc(id).delete()\n            dispatchIfNotCancelled({ type: 'DELETED_DOCUMENT' })\n        }\n        catch (err)  {\n            dispatchIfNotCancelled({type: 'ERROR', payload: 'Could not delete'})\n        }\n    }\n\n    // cleanup function\n\n    useEffect(()=> { \n        return () => {\n        setIsCancelled(true)\n    }\n\n    }, []) // only runs on mount due to empty dep array\n\n    return { addDocument, deleteDocument, response }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}
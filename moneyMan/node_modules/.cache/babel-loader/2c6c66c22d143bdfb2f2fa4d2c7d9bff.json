{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { projectFirestore } from \"../firebase/config\";\nexport const useCollection = collection => {\n  _s();\n  const [documents, setDocuments] = useState(null);\n  const [error, setError] = useState(null);\n\n  // below: when using snap shot two args, 1st sets state for docs and error\n  // the second handles error\n\n  useEffect(() => {\n    let ref = projectFirestore.collection(collection);\n    const unsubscribe = ref.onSnapshot(snapshot => {\n      let results = [];\n      snapshot.docs.forEach(doc => {\n        results.push({\n          ...doc.data(),\n          id: doc.id\n        });\n      });\n\n      // updates state\n      setDocuments(results);\n      setError(null);\n    }, error => {\n      console.log(error);\n      setError('Could not fetch data');\n    });\n    // cleanup/unsub\n\n    return () => unsubscribe();\n  }, [collection]);\n  return {\n    documents,\n    error\n  };\n};\n_s(useCollection, \"fNfjlBO6dpIJf0TZ+/+RaS5Zw4Q=\");","map":{"version":3,"names":["useEffect","useState","projectFirestore","useCollection","collection","documents","setDocuments","error","setError","ref","unsubscribe","onSnapshot","snapshot","results","docs","forEach","doc","push","data","id","console","log"],"sources":["/home/dnlstronge/ReactP/moneyMan/src/hooks/useCollection.js"],"sourcesContent":["import { useEffect, useState } from \"react\"\nimport { projectFirestore } from \"../firebase/config\"\n\n\nexport const useCollection = (collection) => {\n    const [ documents, setDocuments ] = useState(null)\n    const [ error, setError ] = useState(null)\n\n\n    // below: when using snap shot two args, 1st sets state for docs and error\n    // the second handles error\n\n    useEffect(() => {\n        let ref = projectFirestore.collection(collection)\n        const unsubscribe = ref.onSnapshot( (snapshot) => {\n            let results = []\n            snapshot.docs.forEach( doc => {\n                results.push({...doc.data(), id: doc.id })\n            })\n\n            // updates state\n            setDocuments(results)\n            setError(null)\n        }, (error) => {\n            console.log(error)\n            setError('Could not fetch data')\n        })\n            // cleanup/unsub\n        \n            return () => unsubscribe()\n\n\n    }, [collection])\n\n    return {documents, error}\n}"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,gBAAgB,QAAQ,oBAAoB;AAGrD,OAAO,MAAMC,aAAa,GAAIC,UAAU,IAAK;EAAA;EACzC,MAAM,CAAEC,SAAS,EAAEC,YAAY,CAAE,GAAGL,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAM,CAAEM,KAAK,EAAEC,QAAQ,CAAE,GAAGP,QAAQ,CAAC,IAAI,CAAC;;EAG1C;EACA;;EAEAD,SAAS,CAAC,MAAM;IACZ,IAAIS,GAAG,GAAGP,gBAAgB,CAACE,UAAU,CAACA,UAAU,CAAC;IACjD,MAAMM,WAAW,GAAGD,GAAG,CAACE,UAAU,CAAGC,QAAQ,IAAK;MAC9C,IAAIC,OAAO,GAAG,EAAE;MAChBD,QAAQ,CAACE,IAAI,CAACC,OAAO,CAAEC,GAAG,IAAI;QAC1BH,OAAO,CAACI,IAAI,CAAC;UAAC,GAAGD,GAAG,CAACE,IAAI,EAAE;UAAEC,EAAE,EAAEH,GAAG,CAACG;QAAG,CAAC,CAAC;MAC9C,CAAC,CAAC;;MAEF;MACAb,YAAY,CAACO,OAAO,CAAC;MACrBL,QAAQ,CAAC,IAAI,CAAC;IAClB,CAAC,EAAGD,KAAK,IAAK;MACVa,OAAO,CAACC,GAAG,CAACd,KAAK,CAAC;MAClBC,QAAQ,CAAC,sBAAsB,CAAC;IACpC,CAAC,CAAC;IACE;;IAEA,OAAO,MAAME,WAAW,EAAE;EAGlC,CAAC,EAAE,CAACN,UAAU,CAAC,CAAC;EAEhB,OAAO;IAACC,SAAS;IAAEE;EAAK,CAAC;AAC7B,CAAC;AAAA,GA/BYJ,aAAa"},"metadata":{},"sourceType":"module"}